<?eclipse.ant.import ?>
<project basedir="." name="benchmarks">
	<!-- Set the directory for running the benchmarks -->
	<property name="benchmarks.dir" value="${java.io.tmpdir}/kyanos-benchmarks"/>
	<property name="resources.dir" value="resources"/>
	<property name="tests.dir" value="${benchmarks.dir}/temp"/>
	<property name="timeout" value="7200000"/>
	
	<tstamp> 
		<format property="time.stamp" pattern="yyyyMMddHHmmss"/>
	</tstamp>
	<property name="log.file" value="${benchmarks.dir}/antlog-${time.stamp}.txt"/>
	<mkdir dir="${benchmarks.dir}"/>
	<record name="${log.file}"/>

	<!-- Default JVM arguments for creating test resources -->
	<property name="creator.vmargs" value="-Xmx8g" />
	<!-- Default JVM argument for traversing and querying test resources -->
	<property name="tester.vmargs" value="-Xmx8g" />
	
	<property name="debug.vmargs" value="" />
	<!--<property name="debug.vmargs" value="-Xdebug -agentlib:jdwp=transport=dt_socket,server=y,address=8000" />-->

	<property name="creator.vmargs.value" value="-Dfile.encoding=utf-8 ${creator.vmargs} ${debug.vmargs}" />
	<property name="tester.vmargs.value" value="-Dfile.encoding=utf-8 ${tester.vmargs} ${debug.vmargs}" />
	
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
	  <classpath>
	    <pathelement location="${basedir}/lib/ant-contrib.jar"/>
	  </classpath>
	</taskdef>
	
	<macrodef name="timestamp.echo">
		<attribute name="message"/>    
		<sequential> 
			<local name="current.time" />
			<tstamp> 
				<format property="current.time" pattern="dd/MM/yyyy HH:mm:ss"/> 
			</tstamp>          
			<echo message="${current.time} @{message}" />
		</sequential>
	</macrodef>
	
	
	<target name="execute.benchmarks.all" description="Prepares the benchmarks environment and executed the benchmarks for ALL (-Xmx8g, -Xmx512m &amp; -Xmx256m)">
		<antcall target="execute.benchmarks.all.cdo" inheritall="no" />
		<antcall target="execute.benchmarks.all.kyanos.map" inheritall="no" />
		<antcall target="execute.benchmarks.all.kyanos.graph" inheritall="no" />
		<antcall target="execute.benchmarks.all.xmi" inheritall="no" />
	</target>
	
	<target name="execute.benchmarks.all.cdo" description="Prepares the benchmarks environment and executes the benchmarks for CDO (-Xmx8g &amp; -Xmx512m &amp; -Xmx256m)">
		<antcall target="execute.benchmarks.cdo" inheritall="no">
			<param name="tester.vmargs" value="-Xmx8g"/>
		</antcall>
		<antcall target="execute.benchmarks.cdo" inheritall="no">
			<param name="tester.vmargs" value="-Xmx512m"/>
		</antcall>
		<antcall target="execute.benchmarks.cdo" inheritall="no">
			<param name="tester.vmargs" value="-Xmx256m"/>
		</antcall>
	</target>
	
	<target name="execute.benchmarks.all.kyanos.map" description="Prepares the benchmarks environment and executes the benchmarks for KyanosMap (-Xmx8g &amp; -Xmx512m &amp; -Xmx256m)">
		<antcall target="execute.benchmarks.kyanos.map" inheritall="no">
			<param name="tester.vmargs" value="-Xmx8g"/>
		</antcall>
		<antcall target="execute.benchmarks.kyanos.map" inheritall="no">
			<param name="tester.vmargs" value="-Xmx512m"/>
		</antcall>
		<antcall target="execute.benchmarks.kyanos.map" inheritall="no">
			<param name="tester.vmargs" value="-Xmx256m"/>
		</antcall>
	</target>
	
	<target name="execute.benchmarks.all.kyanos.graph" description="Prepares the benchmarks environment and executes the benchmarks for KyanosGraph (-Xmx8g, -Xmx512m &amp; -Xmx256m)">
		<antcall target="execute.benchmarks.kyanos.graph" inheritall="no">
			<param name="tester.vmargs" value="-Xmx8g"/>
		</antcall>
		<antcall target="execute.benchmarks.kyanos.graph" inheritall="no">
			<param name="tester.vmargs" value="-Xmx512m"/>
		</antcall>
		<antcall target="execute.benchmarks.kyanos.graph" inheritall="no">
			<param name="tester.vmargs" value="-Xmx256m"/>
		</antcall>
	</target>

	<target name="execute.benchmarks.all.xmi" description="Prepares the benchmarks environment and executes the benchmarks for XMI (-Xmx8g, -Xmx512m &amp; -Xmx256m)">
		<antcall target="execute.benchmarks.xmi" inheritall="no">
			<param name="tester.vmargs" value="-Xmx8g"/>
		</antcall>
		<antcall target="execute.benchmarks.xmi" inheritall="no">
			<param name="tester.vmargs" value="-Xmx512m"/>
		</antcall>
		<antcall target="execute.benchmarks.xmi" inheritall="no">
			<param name="tester.vmargs" value="-Xmx256m"/>
		</antcall>
	</target>
	
	<target name="execute.benchmarks.cdo">
		<antcall target="build"/>
		<antcall target="migrate.cdo"/>
		<antcall target="traverse.resources.cdo"/>
		<antcall target="query.orphan.resources.cdo"/>
		<antcall target="query.grabats.resources.cdo"/>
		<antcall target="query.unusedmethods.resources.cdo"/>
		<antcall target="query.thrownexceptions.resources.cdo"/>
		<antcall target="query.invmethods.resources.cdo"/>
		<antcall target="query.classdecl.resources.cdo"/>
		<antcall target="query.unusedmethods.complex.resources.cdo"/>
		<antcall target="query.rename.resources.cdo"/>
	</target>
	
	<target name="execute.benchmarks.kyanos.map">
		<antcall target="build"/>
		<antcall target="migrate.kyanos"/>
		<antcall target="traverse.resources.kyanos.map"/>
		<antcall target="query.orphan.resources.kyanos.map"/>
		<antcall target="query.grabats.resources.kyanos.map"/>
		<antcall target="query.unusedmethods.resources.kyanos.map"/>
		<antcall target="query.thrownexceptions.resources.kyanos.map"/>
		<antcall target="query.invmethods.resources.kyanos.map"/>
		<antcall target="query.classdecl.resources.kyanos.map"/>
		<antcall target="query.unusedmethods.complex.resources.kyanos.map"/>
		<antcall target="query.rename.resources.kyanos.map"/>
	</target>
	
	<target name="execute.benchmarks.kyanos.graph">
		<antcall target="build"/>
		<antcall target="migrate.kyanos"/>
		<antcall target="traverse.resources.kyanos.graph"/>
		<antcall target="query.orphan.resources.kyanos.graph"/>
		<antcall target="query.grabats.resources.kyanos.graph"/>
		<antcall target="query.unusedmethods.resources.kyanos.graph"/>
		<antcall target="query.thrownexceptions.resources.kyanos.graph"/>
		<antcall target="query.invmethods.resources.kyanos.graph"/>
		<antcall target="query.classdecl.resources.kyanos.graph"/>
		<antcall target="query.unusedmethods.complex.resources.kyanos.graph"/>
		<antcall target="query.rename.resources.kyanos.graph"/>
	</target>
	
	<target name="execute.benchmarks.xmi">
		<antcall target="build"/>
		<antcall target="migrate.xmi"/>
		<antcall target="traverse.resources.xmi"/>
	</target>
	
	<target name="extract.resources">
		<if>
			<not>
				<available file="${resources.dir}" type="dir"/>
			</not>
			<then>
				<unzip src="${basedir}/resources.zip" dest="${basedir}"/>
			</then>
		</if>
	</target>
	
    <target name="migrate.cdo.file">
    	<basename property="xmi.filename" file="${xmi.file}" suffix="xmi"/>
		<property name="cdo.out" value="${benchmarks.dir}/${xmi.filename}.cdo.zxmi"/>
    	<if>
			<not>
				<available file="${cdo.out}" />
			</not>
    		<then>
    			<echo>Creating ${cdo.out}</echo>
    			<echo>JVM args: ${creator.vmargs.value}</echo>
    			<stopwatch name="timer"/>
		        <java classname="io.github.abelgomez.kyanos.benchmarks.Migrator" failonerror="false" fork="yes" timeout="${timeout}">
		        	<jvmarg line="${creator.vmargs.value}"/>
		            <arg value="-input"/>
		            <arg value="${xmi.file}"/>
		            <arg value="-output"/>
		            <arg value="${cdo.out}"/>
		        	<arg value="-input_epackage_class"/>
		        	<arg value ="org.eclipse.gmt.modisco.java.emf.impl.JavaPackageImpl"/>
		        	<arg value="-output_epackage_class"/>
		        	<arg value="org.eclipse.gmt.modisco.java.cdo.impl.JavaPackageImpl"/>
		            <classpath refid="io.github.abelgomez.kyanos.benchmarks.classpath"/>
		        </java>
    			<stopwatch name="timer" action="total"/>
			</then>
    		<else>
    			<echo>${cdo.out} already exists</echo>
    		</else>
    	</if>
    </target>
	
    <target name="migrate.kyanos.file">
    	<basename property="xmi.filename" file="${xmi.file}" suffix="xmi"/>
		<property name="kyanos.out" value="${benchmarks.dir}/${xmi.filename}.kyanos.zxmi"/>
    	<if>
			<not>
				<available file="${kyanos.out}" />
			</not>
    		<then>
    			<echo>Creating ${kyanos.out}</echo>
    			<echo>JVM args: ${creator.vmargs.value}</echo>
    			<stopwatch name="timer"/>
		        <java classname="io.github.abelgomez.kyanos.benchmarks.Migrator" failonerror="false" fork="yes" timeout="${timeout}">
		        	<jvmarg line="${creator.vmargs.value}"/>
		            <arg value="-input"/>
		            <arg value="${xmi.file}"/>
		            <arg value="-output"/>
		            <arg value="${kyanos.out}"/>
		        	<arg value="-input_epackage_class"/>
		        	<arg value ="org.eclipse.gmt.modisco.java.emf.impl.JavaPackageImpl"/>
		        	<arg value="-output_epackage_class"/>
		        	<arg value="org.eclipse.gmt.modisco.java.kyanos.impl.JavaPackageImpl"/>
		            <classpath refid="io.github.abelgomez.kyanos.benchmarks.classpath"/>
		        </java>
    			<stopwatch name="timer" action="total"/>
			</then>
    		<else>
    			<echo>${kyanos.out} already exists</echo>
    		</else>
    	</if>
    </target>

	<!--
	<target name="migrate.morsa.file">
    	<basename property="xmi.filename" file="${xmi.file}" suffix="xmi"/>
		<property name="morsa.out" value="${benchmarks.dir}/${xmi.filename}.morsa.zxmi"/>
    	<if>
			<not>
				<available file="${morsa.out}" />
			</not>
    		<then>
    			<echo>Creating ${morsa.out}</echo>
    			<echo>JVM args: ${creator.vmargs.value}</echo>
    			<stopwatch name="timer"/>
		        <java classname="io.github.abelgomez.kyanos.benchmarks.Migrator" failonerror="false" fork="yes" timeout="${timeout}">
		        	<jvmarg line="${creator.vmargs.value}"/>
		            <arg value="-input"/>
		            <arg value="${xmi.file}"/>
		            <arg value="-output"/>
		            <arg value="${morsa.out}"/>
		        	<arg value="-input_epackage_class"/>
		        	<arg value="org.eclipse.gmt.modisco.java.emf.impl.JavaPackageImpl"/>
		        	<arg value="-output_epackage_class"/>
		        	<arg value="org.eclipse.gmt.modisco.java.emf.impl.JavaPackageImpl"/>
		            <classpath refid="io.github.abelgomez.kyanos.benchmarks.classpath"/>
		        </java>
    			<stopwatch name="timer" action="total"/>
			</then>
    		<else>
    			<echo>${morsa.out} already exists</echo>
    		</else>
    	</if>
    </target>
    -->
	
	<target name="migrate.xmi.file">
    	<basename property="xmi.filename" file="${xmi.file}" suffix="xmi"/>
		<property name="xmi.out" value="${benchmarks.dir}/${xmi.filename}.xmi.zxmi"/>
    	<if>
			<not>
				<available file="${xmi.out}" />
			</not>
    		<then>
    			<echo>Creating ${xmi.out}</echo>
    			<echo>JVM args: ${creator.vmargs.value}</echo>
    			<stopwatch name="timer"/>
		        <java classname="io.github.abelgomez.kyanos.benchmarks.Migrator" failonerror="false" fork="yes" timeout="${timeout}">
		        	<jvmarg line="${creator.vmargs.value}"/>
		            <arg value="-input"/>
		            <arg value="${xmi.file}"/>
		            <arg value="-output"/>
		            <arg value="${xmi.out}"/>
		        	<arg value="-input_epackage_class"/>
		        	<arg value="org.eclipse.gmt.modisco.java.emf.impl.JavaPackageImpl"/>
		        	<arg value="-output_epackage_class"/>
		        	<arg value="org.eclipse.gmt.modisco.java.emf.impl.JavaPackageImpl"/>
		            <classpath refid="io.github.abelgomez.kyanos.benchmarks.classpath"/>
		        </java>
    			<stopwatch name="timer" action="total"/>
			</then>
    		<else>
    			<echo>${xmi.out} already exists</echo>
    		</else>
    	</if>
    </target>

	<target name="migrate.cdo" description="Migrates and initializes the source models into the benchmarks location for CDO" depends="extract.resources">
		<foreach inheritall="true" target="migrate.cdo.file" param="xmi.file">
			<path>
				<fileset dir="${resources.dir}">
					<include name="**/*.xmi"/>
				</fileset>
			</path>
		</foreach>
	</target>
	
	<target name="migrate.kyanos" description="Migrates and initializes the source models into the benchmarks location for Kyanos" depends="extract.resources">
		<foreach inheritall="true" target="migrate.kyanos.file" param="xmi.file">
			<path>
				<fileset dir="${resources.dir}">
					<include name="**/*.xmi"/>
				</fileset>
			</path>
		</foreach>
	</target>
	
	<!--
	<target name="migrate.morsa" description="Migrates and initializes the source models into the benchmarks location for Morsa" depends="extract.resources">
		<foreach inheritall="true" target="migrate.morsa.file" param="xmi.file">
			<path>
				<fileset dir="${resources.dir}">
					<include name="**/*.xmi"/>
				</fileset>
			</path>
		</foreach>
	</target>
	-->
	
	<target name="migrate.xmi" description="Migrates and initializes the source models into the benchmarks location for XMI" depends="extract.resources">
		<foreach inheritall="true" target="migrate.xmi.file" param="xmi.file">
			<path>
				<fileset dir="${resources.dir}">
					<include name="**/*.xmi"/>
				</fileset>
			</path>
		</foreach>
	</target>
	
    <target name="gen.test.resource.cdo">
    	<basename property="cdo.zxmi.filename" file="${cdo.zxmi.file}" suffix="cdo.zxmi"/>
		<property name="resource.out" value="${benchmarks.dir}/${cdo.zxmi.filename}.cdoresource"/>
    	<if>
			<not>
				<available file="${resource.out}" />
			</not>
    		<then>
    			<timestamp.echo message="Start" />
    			<echo>Creating ${resource.out}</echo>
    			<echo>JVM args: ${creator.vmargs.value}</echo>
    			<stopwatch name="timer"/>
		        <java classname="io.github.abelgomez.kyanos.benchmarks.CdoCreator" failonerror="false" fork="yes" timeout="${timeout}">
		        	<jvmarg line="${creator.vmargs.value}"/>
		            <arg value="-input"/>
		            <arg value="${cdo.zxmi.file}"/>
		            <arg value="-output"/>
		            <arg value="${resource.out}"/>
		        	<arg value="-epackage_class"/>
		        	<arg value ="org.eclipse.gmt.modisco.java.cdo.impl.JavaPackageImpl"/>
		        	<arg value="-reponame"/>
		        	<arg value="repo"/>
		            <classpath refid="io.github.abelgomez.kyanos.benchmarks.classpath"/>
		        </java>
    			<stopwatch name="timer" action="total"/>
    			<timestamp.echo message="End" />
			</then>
    		<else>
    			<echo>${resource.out} already exists</echo>
    		</else>
    	</if>
    </target>
	
    <target name="gen.test.resource.kyanos.map">
    	<basename property="kyanos.zxmi.filename" file="${kyanos.zxmi.file}" suffix="kyanos.zxmi"/>
		<property name="resource.out" value="${benchmarks.dir}/${kyanos.zxmi.filename}.kyanosmapresource"/>
    	<if>
			<not>
				<available file="${resource.out}" />
			</not>
    		<then>
    			<timestamp.echo message="Start" />
    			<echo>Creating ${resource.out}</echo>
    			<echo>JVM args: ${creator.vmargs.value}</echo>
    			<stopwatch name="timer"/>
		        <java classname="io.github.abelgomez.kyanos.benchmarks.KyanosMapCreator" failonerror="false" fork="yes" timeout="${timeout}">
		        	<jvmarg line="${creator.vmargs.value}"/>
		            <arg value="-input"/>
		            <arg value="${kyanos.zxmi.file}"/>
		            <arg value="-output"/>
		            <arg value="${resource.out}"/>
		        	<arg value="-epackage_class"/>
		        	<arg value ="org.eclipse.gmt.modisco.java.kyanos.impl.JavaPackageImpl"/>
		            <classpath refid="io.github.abelgomez.kyanos.benchmarks.classpath"/>
		        </java>
    			<stopwatch name="timer" action="total"/>
    			<timestamp.echo message="End" />
			</then>
    		<else>
    			<echo>${resource.out} already exists</echo>
    		</else>
    	</if>
    </target>
	
    <target name="gen.test.resource.kyanos.graph">
    	<basename property="kyanos.zxmi.filename" file="${kyanos.zxmi.file}" suffix="kyanos.zxmi"/>
		<property name="resource.out" value="${benchmarks.dir}/${kyanos.zxmi.filename}.kyanosgraphresource"/>
		<property name="resource.properties.out" value="${benchmarks.dir}/${kyanos.zxmi.filename}.kyanosgraphresource.properties"/>
    	<if>
			<not>
				<available file="${resource.out}" />
			</not>
    		<then>
    			<!-- Modify Kyanos resource load/save properties here -->
    			<propertyfile file="${resource.properties.out}">
    			  <entry key="blueprints.graph" value="com.tinkerpop.blueprints.impls.neo4j.Neo4jGraph"/>
    			</propertyfile>
    			<timestamp.echo message="Start" />
    			<echo>Creating ${resource.out}</echo>
    			<echo>JVM args: ${creator.vmargs.value}</echo>
    			<stopwatch name="timer"/>
		        <java classname="io.github.abelgomez.kyanos.benchmarks.KyanosGraphCreator" failonerror="false" fork="yes" timeout="${timeout}">
		        	<jvmarg line="${creator.vmargs.value}"/>
		            <arg value="-input"/>
		            <arg value="${kyanos.zxmi.file}"/>
		            <arg value="-output"/>
		            <arg value="${resource.out}"/>
		        	<arg value="-epackage_class"/>
		        	<arg value ="org.eclipse.gmt.modisco.java.kyanos.impl.JavaPackageImpl"/>
		        	<arg value="-options_file"/>
		        	<arg value="${resource.properties.out}"/>
		            <classpath refid="io.github.abelgomez.kyanos.benchmarks.classpath"/>
		        </java>
    			<stopwatch name="timer" action="total"/>
    			<timestamp.echo message="End" />
			</then>
    		<else>
    			<echo>${resource.out} already exists</echo>
    		</else>
    	</if>
    </target>
	
	<!--
    <target name="gen.test.resource.morsa">
    	<basename property="morsa.zxmi.filename" file="${morsa.zxmi.file}" suffix="morsa.zxmi"/>
		<property name="resource.out" value="${benchmarks.dir}/${morsa.zxmi.filename}.morsaresource"/>
    	<if>
			<not>
				<available file="${resource.out}" />
			</not>
    		<then>
    			<timestamp.echo message="Start" />
    			<echo>Creating ${resource.out}</echo>
    			<echo>JVM args: ${creator.vmargs.value}</echo>
    			<stopwatch name="timer"/>
		        <java classname="io.github.abelgomez.kyanos.benchmarks.MorsaCreator" failonerror="false" fork="yes" timeout="${timeout}">
		        	<jvmarg line="${creator.vmargs.value}"/>
		            <arg value="-input"/>
		            <arg value="${morsa.zxmi.file}"/>
		            <arg value="-output"/>
		            <arg value="${resource.out}"/>
		        	<arg value="-epackage_class"/>
		        	<arg value ="org.eclipse.gmt.modisco.java.emf.impl.JavaPackageImpl"/>
		            <classpath refid="io.github.abelgomez.kyanos.benchmarks.classpath"/>
		        </java>
    			<stopwatch name="timer" action="total"/>
    			<timestamp.echo message="End" />
			</then>
    		<else>
    			<echo>${resource.out} already exists</echo>
    		</else>
    	</if>
    </target>
	-->
	
    <target name="gen.test.resource.xmi">
    	<basename property="xmi.zxmi.filename" file="${xmi.zxmi.file}" suffix="xmi.zxmi"/>
		<property name="resource.out" value="${benchmarks.dir}/${xmi.zxmi.filename}.xmi"/>
    	<if>
			<not>
				<available file="${resource.out}" />
			</not>
    		<then>
    			<timestamp.echo message="Start" />
    			<echo>Creating ${resource.out}</echo>
    			<echo>JVM args: ${creator.vmargs.value}</echo>
    			<stopwatch name="timer"/>
		        <java classname="io.github.abelgomez.kyanos.benchmarks.XmiCreator" failonerror="false" fork="yes" timeout="${timeout}">
		        	<jvmarg line="${creator.vmargs.value}"/>
		            <arg value="-input"/>
		            <arg value="${xmi.zxmi.file}"/>
		            <arg value="-output"/>
		            <arg value="${resource.out}"/>
		        	<arg value="-epackage_class"/>
		        	<arg value ="org.eclipse.gmt.modisco.java.emf.impl.JavaPackageImpl"/>
		            <classpath refid="io.github.abelgomez.kyanos.benchmarks.classpath"/>
		        </java>
    			<stopwatch name="timer" action="total"/>
    			<timestamp.echo message="End" />
			</then>
    		<else>
    			<echo>${resource.out} already exists</echo>
    		</else>
    	</if>
    </target>
	
	<target name="gen.test.resources.cdo">
		<foreach inheritall="true" target="gen.test.resource.cdo" param="cdo.zxmi.file">
			<path>
				<fileset dir="${benchmarks.dir}">
					<include name="**/*.cdo.zxmi"/>
				</fileset>
			</path>
		</foreach>
	</target>

	<target name="gen.test.resources.kyanos.map">
		<foreach inheritall="true" target="gen.test.resource.kyanos.map" param="kyanos.zxmi.file">
			<path>
				<fileset dir="${benchmarks.dir}">
					<include name="**/*.kyanos.zxmi"/>
				</fileset>
			</path>
		</foreach>
	</target>
	
	<target name="gen.test.resources.kyanos.graph">
		<foreach inheritall="true" target="gen.test.resource.kyanos.graph" param="kyanos.zxmi.file">
			<path>
				<fileset dir="${benchmarks.dir}">
					<include name="**/*.kyanos.zxmi"/>
				</fileset>
			</path>
		</foreach>
	</target>
	
	<!--
	<target name="gen.test.resources.morsa">
		<foreach inheritall="true" target="gen.test.resource.morsa" param="morsa.zxmi.file">
			<path>
				<fileset dir="${benchmarks.dir}">
					<include name="**/*.morsa.zxmi"/>
				</fileset>
			</path>
		</foreach>
	</target>
	-->
	
	<target name="gen.test.resources.xmi">
		<foreach inheritall="true" target="gen.test.resource.xmi" param="xmi.zxmi.file">
			<path>
				<fileset dir="${benchmarks.dir}">
					<include name="**/*.xmi.zxmi"/>
				</fileset>
			</path>
		</foreach>
	</target>
	
	<target name="prepare.test.resources.cdo">
		<delete dir="${tests.dir}" failonerror="false"/>
		<mkdir dir="${tests.dir}"/>
		<copy todir="${tests.dir}">
			<fileset dir="${benchmarks.dir}">
				<include name="*.cdoresource/**"/>
			</fileset>
		</copy>
	</target>
	
	<target name="prepare.test.resources.kyanos.map">
		<delete dir="${tests.dir}" failonerror="false"/>
		<mkdir dir="${tests.dir}"/>
		<copy todir="${tests.dir}">
			<fileset dir="${benchmarks.dir}">
				<include name="*.kyanosmapresource/**"/>
			</fileset>
		</copy>
	</target>
	
	<target name="prepare.test.resources.kyanos.graph">
		<delete dir="${tests.dir}" failonerror="false"/>
		<mkdir dir="${tests.dir}"/>
		<copy todir="${tests.dir}">
			<fileset dir="${benchmarks.dir}">
				<include name="*.kyanosgraphresource/**"/>
			</fileset>
		</copy>
	</target>
	
	<target name="prepare.test.resources.xmi">
		<delete dir="${tests.dir}" failonerror="false"/>
		<mkdir dir="${tests.dir}"/>
		<copy todir="${tests.dir}">
			<fileset dir="${benchmarks.dir}">
				<include name="*.xmi"/>
			</fileset>
		</copy>
	</target>
	
    <target name="traverse.resource.cdo">
		<timestamp.echo message="Start" />
		<echo>Traversing ${cdoresource.dir}</echo>
		<echo>JVM args: ${tester.vmargs.value}</echo>
		<stopwatch name="timer"/>
	    <java classname="io.github.abelgomez.kyanos.benchmarks.CdoTraverser" failonerror="false" fork="yes" timeout="${timeout}">
        	<jvmarg line="${tester.vmargs.value}"/>
	        <arg value="-input"/>
	        <arg value="${cdoresource.dir}"/>
	    	<arg value="-epackage_class"/>
	    	<arg value ="org.eclipse.gmt.modisco.java.cdo.impl.JavaPackageImpl"/>
	    	<arg value="-reponame"/>
	    	<arg value="repo"/>
	        <classpath refid="io.github.abelgomez.kyanos.benchmarks.classpath"/>
	    </java>
		<stopwatch name="timer" action="total"/>
		<timestamp.echo message="End" />
    </target>
	
    <target name="traverse.resource.kyanos.map">
		<timestamp.echo message="Start" />
		<echo>Traversing ${kyanosresource.dir}</echo>
		<echo>JVM args: ${tester.vmargs.value}</echo>
		<stopwatch name="timer"/>
	    <java classname="io.github.abelgomez.kyanos.benchmarks.KyanosMapTraverser" failonerror="false" fork="yes" timeout="${timeout}">
        	<jvmarg line="${tester.vmargs.value}"/>
	        <arg value="-input"/>
	        <arg value="${kyanosresource.dir}"/>
	    	<arg value="-epackage_class"/>
	    	<arg value ="org.eclipse.gmt.modisco.java.kyanos.impl.JavaPackageImpl"/>
	        <classpath refid="io.github.abelgomez.kyanos.benchmarks.classpath"/>
	    </java>
		<stopwatch name="timer" action="total"/>
		<timestamp.echo message="End" />
    </target>
	
    <target name="traverse.resource.kyanos.graph">
		<timestamp.echo message="Start" />
		<echo>Traversing ${kyanosresource.dir}</echo>
		<echo>JVM args: ${tester.vmargs.value}</echo>
		<stopwatch name="timer"/>
	    <java classname="io.github.abelgomez.kyanos.benchmarks.KyanosGraphTraverser" failonerror="false" fork="yes" timeout="${timeout}">
        	<jvmarg line="${tester.vmargs.value}"/>
	        <arg value="-input"/>
	        <arg value="${kyanosresource.dir}"/>
	    	<arg value="-epackage_class"/>
	    	<arg value ="org.eclipse.gmt.modisco.java.kyanos.impl.JavaPackageImpl"/>
	        <classpath refid="io.github.abelgomez.kyanos.benchmarks.classpath"/>
	    </java>
		<stopwatch name="timer" action="total"/>
		<timestamp.echo message="End" />
    </target>
	
	<!--
    <target name="traverse.resource.morsa">
		<timestamp.echo message="Start" />
		<echo>Traversing ${kyanosresource.dir}</echo>
		<echo>JVM args: ${tester.vmargs.value}</echo>
		<stopwatch name="timer"/>
	    <java classname="io.github.abelgomez.kyanos.benchmarks.MorsaTraverser" failonerror="false" fork="yes" timeout="${timeout}">
        	<jvmarg line="${tester.vmargs.value}"/>
	        <arg value="-input"/>
	        <arg value="${morsaresource.dir}"/>
	    	<arg value="-epackage_class"/>
	    	<arg value ="org.eclipse.gmt.modisco.java.emf.impl.JavaPackageImpl"/>
	        <classpath refid="io.github.abelgomez.kyanos.benchmarks.classpath"/>
	    </java>
		<stopwatch name="timer" action="total"/>
		<timestamp.echo message="End" />
    </target>
	-->
	
    <target name="traverse.resource.xmi">
		<timestamp.echo message="Start" />
		<echo>Traversing ${xmiresource}</echo>
		<echo>JVM args: ${tester.vmargs.value}</echo>
		<stopwatch name="timer"/>
	    <java classname="io.github.abelgomez.kyanos.benchmarks.XmiTraverser" failonerror="false" fork="yes" timeout="${timeout}">
        	<jvmarg line="${tester.vmargs.value}"/>
	        <arg value="-input"/>
	        <arg value="${xmiresource}"/>
	    	<arg value="-epackage_class"/>
	    	<arg value ="org.eclipse.gmt.modisco.java.emf.impl.JavaPackageImpl"/>
	        <classpath refid="io.github.abelgomez.kyanos.benchmarks.classpath"/>
	    </java>
		<stopwatch name="timer" action="total"/>
		<timestamp.echo message="End" />
    </target>
	
	<target name="traverse.resources.cdo" description="Simple model traversal (CDO)" depends="gen.test.resources.cdo">
		<antcall target="prepare.test.resources.cdo" />
		<foreach inheritall="true" target="traverse.resource.cdo" param="cdoresource.dir">
			<path>
				<dirset dir="${tests.dir}">
					<include name="**/*.cdoresource"/>
				</dirset>
			</path>
		</foreach>
	</target>
	
	<target name="traverse.resources.kyanos.map" description="Simple model traversal (KyanosMap)" depends="gen.test.resources.kyanos.map">
		<antcall target="prepare.test.resources.kyanos.map" />
		<foreach inheritall="true" target="traverse.resource.kyanos.map" param="kyanosresource.dir">
			<path>
				<dirset dir="${tests.dir}">
					<include name="**/*.kyanosmapresource"/>
				</dirset>
			</path>
		</foreach>
	</target>
	
	<target name="traverse.resources.kyanos.graph" description="Simple model traversal (KyanosGraph)" depends="gen.test.resources.kyanos.graph">
		<antcall target="prepare.test.resources.kyanos.graph" />
		<foreach inheritall="true" target="traverse.resource.kyanos.graph" param="kyanosresource.dir">
			<path>
				<dirset dir="${tests.dir}">
					<include name="**/*.kyanosgraphresource"/>
				</dirset>
			</path>
		</foreach>
	</target>
	
	<!--
	<target name="traverse.resources.morsa" description="Simple model traversal (Morsa)">
		<foreach inheritall="true" target="traverse.resource.morsa" param="morsaresource.dir" 
		list="c:/Benchmarks/kyanos-benchmarks/io.github.abelgomez.kyanos.tests.morsaresource,c:/Benchmarks/kyanos-benchmarks/io.github.abelgomez.neo4emf.neo4jresolver.morsaresource,c:/Benchmarks/kyanos-benchmarks/org.eclipse.gmt.modisco.java.kyanos.morsaresource,c:/Benchmarks/kyanos-benchmarks/org.eclipse.jdt.core.morsaresource,c:/Benchmarks/kyanos-benchmarks/org.eclipse.jdt.source.all.morsaresource" />
	</target>
	
	<target name="traverse.resources.xmi" description="Simple model traversal (XMI)" depends="gen.test.resources.xmi">
		<antcall target="prepare.test.resources.xmi" />
		<foreach inheritall="true" target="traverse.resource.xmi" param="xmiresource">
			<path>
				<fileset dir="${tests.dir}">
					<include name="*.xmi"/>
				</fileset>
			</path>
		</foreach>
	</target>
	-->
	
    <target name="query.orphan.resource.cdo">
		<timestamp.echo message="Start" />
		<echo>Querying ${cdoresource.dir}</echo>
		<echo>JVM args: ${tester.vmargs.value}</echo>
		<stopwatch name="timer"/>
	    <java classname="io.github.abelgomez.kyanos.benchmarks.CdoQueryOrphanNonPrimitiveTypes" failonerror="false" fork="yes" timeout="${timeout}">
        	<jvmarg line="${tester.vmargs.value}"/>
	        <arg value="-input"/>
	        <arg value="${cdoresource.dir}"/>
	    	<arg value="-epackage_class"/>
	    	<arg value ="org.eclipse.gmt.modisco.java.cdo.impl.JavaPackageImpl"/>
	    	<arg value="-reponame"/>
	    	<arg value="repo"/>
	        <classpath refid="io.github.abelgomez.kyanos.benchmarks.classpath"/>
	    </java>
		<stopwatch name="timer" action="total"/>
		<timestamp.echo message="End" />
    </target>
	
    <target name="query.orphan.resource.kyanos.map">
		<timestamp.echo message="Start" />
		<echo>Querying ${kyanosresource.dir}</echo>
		<echo>JVM args: ${tester.vmargs.value}</echo>
		<stopwatch name="timer"/>
	    <java classname="io.github.abelgomez.kyanos.benchmarks.KyanosMapQueryOrphanNonPrimitiveTypes" failonerror="false" fork="yes" timeout="${timeout}">
        	<jvmarg line="${tester.vmargs.value}"/>
	        <arg value="-input"/>
	        <arg value="${kyanosresource.dir}"/>
	    	<arg value="-epackage_class"/>
	    	<arg value ="org.eclipse.gmt.modisco.java.kyanos.impl.JavaPackageImpl"/>
	        <classpath refid="io.github.abelgomez.kyanos.benchmarks.classpath"/>
	    </java>
		<stopwatch name="timer" action="total"/>
		<timestamp.echo message="End" />
    </target>
	
    <target name="query.orphan.resource.kyanos.graph">
		<timestamp.echo message="Start" />
		<echo>Querying ${kyanosresource.dir}</echo>
		<echo>JVM args: ${tester.vmargs.value}</echo>
		<stopwatch name="timer"/>
	    <java classname="io.github.abelgomez.kyanos.benchmarks.KyanosGraphQueryOrphanNonPrimitiveTypes" failonerror="false" fork="yes" timeout="${timeout}">
        	<jvmarg line="${tester.vmargs.value}"/>
	        <arg value="-input"/>
	        <arg value="${kyanosresource.dir}"/>
	    	<arg value="-epackage_class"/>
	    	<arg value ="org.eclipse.gmt.modisco.java.kyanos.impl.JavaPackageImpl"/>
	        <classpath refid="io.github.abelgomez.kyanos.benchmarks.classpath"/>
	    </java>
		<stopwatch name="timer" action="total"/>
		<timestamp.echo message="End" />
    </target>
	
	<target name="query.orphan.resources.cdo" description="Query without full traversal (CDO)" depends="gen.test.resources.cdo">
		<antcall target="prepare.test.resources.cdo" />
		<foreach inheritall="true" target="query.orphan.resource.cdo" param="cdoresource.dir">
			<path>
				<dirset dir="${tests.dir}">
					<include name="**/*.cdoresource"/>
				</dirset>
			</path>
		</foreach>
	</target>
	
	<target name="query.orphan.resources.kyanos.map" description="Query without full traversal (KyanosMap)" depends="gen.test.resources.kyanos.map">
		<antcall target="prepare.test.resources.kyanos.map" />
		<foreach inheritall="true" target="query.orphan.resource.kyanos.map" param="kyanosresource.dir">
			<path>
				<dirset dir="${tests.dir}">
					<include name="**/*.kyanosmapresource"/>
				</dirset>
			</path>
		</foreach>
	</target>
	
	<target name="query.orphan.resources.kyanos.graph" description="Query without full traversal (KyanosGraph)" depends="gen.test.resources.kyanos.graph">
		<antcall target="prepare.test.resources.kyanos.graph" />
		<foreach inheritall="true" target="query.orphan.resource.kyanos.graph" param="kyanosresource.dir">
			<path>
				<dirset dir="${tests.dir}">
					<include name="**/*.kyanosgraphresource"/>
				</dirset>
			</path>
		</foreach>
	</target>
	
    <target name="query.grabats.resource.cdo">
		<timestamp.echo message="Start" />
		<echo>Querying ${cdoresource.dir}</echo>
		<echo>JVM args: ${tester.vmargs.value}</echo>
		<stopwatch name="timer"/>
	    <java classname="io.github.abelgomez.kyanos.benchmarks.CdoQueryGrabats" failonerror="false" fork="yes" timeout="${timeout}">
        	<jvmarg line="${tester.vmargs.value}"/>
	        <arg value="-input"/>
	        <arg value="${cdoresource.dir}"/>
	    	<arg value="-epackage_class"/>
	    	<arg value ="org.eclipse.gmt.modisco.java.cdo.impl.JavaPackageImpl"/>
	    	<arg value="-reponame"/>
	    	<arg value="repo"/>
	        <classpath refid="io.github.abelgomez.kyanos.benchmarks.classpath"/>
	    </java>
		<stopwatch name="timer" action="total"/>
		<timestamp.echo message="End" />
    </target>
	
    <target name="query.grabats.resource.kyanos.map">
		<timestamp.echo message="Start" />
		<echo>Querying ${kyanosresource.dir}</echo>
		<echo>JVM args: ${tester.vmargs.value}</echo>
		<stopwatch name="timer"/>
	    <java classname="io.github.abelgomez.kyanos.benchmarks.KyanosMapQueryGrabats" failonerror="false" fork="yes" timeout="${timeout}">
        	<jvmarg line="${tester.vmargs.value}"/>
	        <arg value="-input"/>
	        <arg value="${kyanosresource.dir}"/>
	    	<arg value="-epackage_class"/>
	    	<arg value ="org.eclipse.gmt.modisco.java.kyanos.impl.JavaPackageImpl"/>
	        <classpath refid="io.github.abelgomez.kyanos.benchmarks.classpath"/>
	    </java>
		<stopwatch name="timer" action="total"/>
		<timestamp.echo message="End" />
    </target>
	
    <target name="query.grabats.resource.kyanos.graph">
		<timestamp.echo message="Start" />
		<echo>Querying ${kyanosresource.dir}</echo>
		<echo>JVM args: ${tester.vmargs.value}</echo>
		<stopwatch name="timer"/>
	    <java classname="io.github.abelgomez.kyanos.benchmarks.KyanosGraphQueryGrabats" failonerror="false" fork="yes" timeout="${timeout}">
        	<jvmarg line="${tester.vmargs.value}"/>
	        <arg value="-input"/>
	        <arg value="${kyanosresource.dir}"/>
	    	<arg value="-epackage_class"/>
	    	<arg value ="org.eclipse.gmt.modisco.java.kyanos.impl.JavaPackageImpl"/>
	        <classpath refid="io.github.abelgomez.kyanos.benchmarks.classpath"/>
	    </java>
		<stopwatch name="timer" action="total"/>
		<timestamp.echo message="End" />
    </target>
	
	<target name="query.grabats.resources.cdo" description="Grabats (CDO)" depends="gen.test.resources.cdo">
		<antcall target="prepare.test.resources.cdo" />
		<foreach inheritall="true" target="query.grabats.resource.cdo" param="cdoresource.dir">
			<path>
				<dirset dir="${tests.dir}">
					<include name="**/*.cdoresource"/>
				</dirset>
			</path>
		</foreach>
	</target>
	
	<target name="query.grabats.resources.kyanos.map" description="Grabats (KyanosMap)" depends="gen.test.resources.kyanos.map">
		<antcall target="prepare.test.resources.kyanos.map" />
		<foreach inheritall="true" target="query.grabats.resource.kyanos.map" param="kyanosresource.dir">
			<path>
				<dirset dir="${tests.dir}">
					<include name="**/*.kyanosmapresource"/>
				</dirset>
			</path>
		</foreach>
	</target>
	
	<target name="query.grabats.resources.kyanos.graph" description="Grabats (KyanosGraph)" depends="gen.test.resources.kyanos.graph">
		<antcall target="prepare.test.resources.kyanos.graph" />
		<foreach inheritall="true" target="query.grabats.resource.kyanos.graph" param="kyanosresource.dir">
			<path>
				<dirset dir="${tests.dir}">
					<include name="**/*.kyanosgraphresource"/>
				</dirset>
			</path>
		</foreach>
	</target>
	
    <target name="query.unusedmethods.resource.cdo">
		<timestamp.echo message="Start" />
		<echo>Querying ${cdoresource.dir}</echo>
		<echo>JVM args: ${tester.vmargs.value}</echo>
		<stopwatch name="timer"/>
	    <java classname="io.github.abelgomez.kyanos.benchmarks.CdoQueryUnusedMethodsList" failonerror="false" fork="yes" timeout="${timeout}">
        	<jvmarg line="${tester.vmargs.value}"/>
	        <arg value="-input"/>
	        <arg value="${cdoresource.dir}"/>
	    	<arg value="-epackage_class"/>
	    	<arg value ="org.eclipse.gmt.modisco.java.cdo.impl.JavaPackageImpl"/>
	    	<arg value="-reponame"/>
	    	<arg value="repo"/>
	        <classpath refid="io.github.abelgomez.kyanos.benchmarks.classpath"/>
	    </java>
		<stopwatch name="timer" action="total"/>
		<timestamp.echo message="End" />
    </target>
	
    <target name="query.unusedmethods.resource.kyanos.map">
		<timestamp.echo message="Start" />
		<echo>Querying ${kyanosresource.dir}</echo>
		<echo>JVM args: ${tester.vmargs.value}</echo>
		<stopwatch name="timer"/>
	    <java classname="io.github.abelgomez.kyanos.benchmarks.KyanosMapQueryUnusedMethodsList" failonerror="false" fork="yes" timeout="${timeout}">
        	<jvmarg line="${tester.vmargs.value}"/>
	        <arg value="-input"/>
	        <arg value="${kyanosresource.dir}"/>
	    	<arg value="-epackage_class"/>
	    	<arg value ="org.eclipse.gmt.modisco.java.kyanos.impl.JavaPackageImpl"/>
	        <classpath refid="io.github.abelgomez.kyanos.benchmarks.classpath"/>
	    </java>
		<stopwatch name="timer" action="total"/>
		<timestamp.echo message="End" />
    </target>
	
    <target name="query.unusedmethods.resource.kyanos.graph">
		<timestamp.echo message="Start" />
		<echo>Querying ${kyanosresource.dir}</echo>
		<echo>JVM args: ${tester.vmargs.value}</echo>
		<stopwatch name="timer"/>
	    <java classname="io.github.abelgomez.kyanos.benchmarks.KyanosGraphQueryUnusedMethodsList" failonerror="false" fork="yes" timeout="${timeout}">
        	<jvmarg line="${tester.vmargs.value}"/>
	        <arg value="-input"/>
	        <arg value="${kyanosresource.dir}"/>
	    	<arg value="-epackage_class"/>
	    	<arg value ="org.eclipse.gmt.modisco.java.kyanos.impl.JavaPackageImpl"/>
	        <classpath refid="io.github.abelgomez.kyanos.benchmarks.classpath"/>
	    </java>
		<stopwatch name="timer" action="total"/>
		<timestamp.echo message="End" />
    </target>
	
	<target name="query.unusedmethods.resources.cdo" description="Unused methods (CDO)" depends="gen.test.resources.cdo">
		<antcall target="prepare.test.resources.cdo" />
		<foreach inheritall="true" target="query.unusedmethods.resource.cdo" param="cdoresource.dir">
			<path>
				<dirset dir="${tests.dir}">
					<include name="**/*.cdoresource"/>
				</dirset>
			</path>
		</foreach>
	</target>
	
	<target name="query.unusedmethods.resources.kyanos.map" description="Unused methods (KyanosMap)" depends="gen.test.resources.kyanos.map">
		<antcall target="prepare.test.resources.kyanos.map" />
		<foreach inheritall="true" target="query.unusedmethods.resource.kyanos.map" param="kyanosresource.dir">
			<path>
				<dirset dir="${tests.dir}">
					<include name="**/*.kyanosmapresource"/>
				</dirset>
			</path>
		</foreach>
	</target>
	
	<target name="query.unusedmethods.resources.kyanos.graph" description="Unused methods (KyanosGraph)" depends="gen.test.resources.kyanos.graph">
		<antcall target="prepare.test.resources.kyanos.graph" />
		<foreach inheritall="true" target="query.unusedmethods.resource.kyanos.graph" param="kyanosresource.dir">
			<path>
				<dirset dir="${tests.dir}">
					<include name="**/*.kyanosgraphresource"/>
				</dirset>
			</path>
		</foreach>
	</target>
	
    <target name="query.thrownexceptions.resource.cdo">
		<timestamp.echo message="Start" />
		<echo>Querying ${cdoresource.dir}</echo>
		<echo>JVM args: ${tester.vmargs.value}</echo>
		<stopwatch name="timer"/>
	    <java classname="io.github.abelgomez.kyanos.benchmarks.CdoQueryThrownExceptionsPerPackage" failonerror="false" fork="yes" timeout="${timeout}">
        	<jvmarg line="${tester.vmargs.value}"/>
	        <arg value="-input"/>
	        <arg value="${cdoresource.dir}"/>
	    	<arg value="-epackage_class"/>
	    	<arg value ="org.eclipse.gmt.modisco.java.cdo.impl.JavaPackageImpl"/>
	    	<arg value="-reponame"/>
	    	<arg value="repo"/>
	        <classpath refid="io.github.abelgomez.kyanos.benchmarks.classpath"/>
	    </java>
		<stopwatch name="timer" action="total"/>
		<timestamp.echo message="End" />
    </target>
	
    <target name="query.thrownexceptions.resource.kyanos.map">
		<timestamp.echo message="Start" />
		<echo>Querying ${kyanosresource.dir}</echo>
		<echo>JVM args: ${tester.vmargs.value}</echo>
		<stopwatch name="timer"/>
	    <java classname="io.github.abelgomez.kyanos.benchmarks.KyanosMapQueryThrownExceptionsPerPackage" failonerror="false" fork="yes" timeout="${timeout}">
        	<jvmarg line="${tester.vmargs.value}"/>
	        <arg value="-input"/>
	        <arg value="${kyanosresource.dir}"/>
	    	<arg value="-epackage_class"/>
	    	<arg value ="org.eclipse.gmt.modisco.java.kyanos.impl.JavaPackageImpl"/>
	        <classpath refid="io.github.abelgomez.kyanos.benchmarks.classpath"/>
	    </java>
		<stopwatch name="timer" action="total"/>
		<timestamp.echo message="End" />
    </target>
	
    <target name="query.thrownexceptions.resource.kyanos.graph">
		<timestamp.echo message="Start" />
		<echo>Querying ${kyanosresource.dir}</echo>
		<echo>JVM args: ${tester.vmargs.value}</echo>
		<stopwatch name="timer"/>
	    <java classname="io.github.abelgomez.kyanos.benchmarks.KyanosGraphQueryThrownExceptionsPerPackage" failonerror="false" fork="yes" timeout="${timeout}">
        	<jvmarg line="${tester.vmargs.value}"/>
	        <arg value="-input"/>
	        <arg value="${kyanosresource.dir}"/>
	    	<arg value="-epackage_class"/>
	    	<arg value ="org.eclipse.gmt.modisco.java.kyanos.impl.JavaPackageImpl"/>
	        <classpath refid="io.github.abelgomez.kyanos.benchmarks.classpath"/>
	    </java>
		<stopwatch name="timer" action="total"/>
		<timestamp.echo message="End" />
    </target>
	
	<target name="query.thrownexceptions.resources.cdo" description="Thrown exceptions per package (CDO)" depends="gen.test.resources.cdo">
		<antcall target="prepare.test.resources.cdo" />
		<foreach inheritall="true" target="query.thrownexceptions.resource.cdo" param="cdoresource.dir">
			<path>
				<dirset dir="${tests.dir}">
					<include name="**/*.cdoresource"/>
				</dirset>
			</path>
		</foreach>
	</target>
	
	<target name="query.thrownexceptions.resources.kyanos.map" description="Thrown exception per package (KyanosMap)" depends="gen.test.resources.kyanos.map">
		<antcall target="prepare.test.resources.kyanos.map" />
		<foreach inheritall="true" target="query.thrownexceptions.resource.kyanos.map" param="kyanosresource.dir">
			<path>
				<dirset dir="${tests.dir}">
					<include name="**/*.kyanosmapresource"/>
				</dirset>
			</path>
		</foreach>
	</target>

	<target name="query.thrownexceptions.resources.kyanos.graph" description="Thrown exception per package (KyanosGraph)" depends="gen.test.resources.kyanos.graph">
		<antcall target="prepare.test.resources.kyanos.graph" />
		<foreach inheritall="true" target="query.thrownexceptions.resource.kyanos.graph" param="kyanosresource.dir">
			<path>
				<dirset dir="${tests.dir}">
					<include name="**/*.kyanosgraphresource"/>
				</dirset>
			</path>
		</foreach>
	</target>

    <target name="query.invmethods.resource.cdo">
		<timestamp.echo message="Start" />
		<echo>Querying ${cdoresource.dir}</echo>
		<echo>JVM args: ${tester.vmargs.value}</echo>
		<stopwatch name="timer"/>
	    <java classname="io.github.abelgomez.kyanos.benchmarks.CdoQueryInvisibleMethodDeclarations" failonerror="false" fork="yes" timeout="${timeout}">
        	<jvmarg line="${tester.vmargs.value}"/>
	        <arg value="-input"/>
	        <arg value="${cdoresource.dir}"/>
	    	<arg value="-epackage_class"/>
	    	<arg value ="org.eclipse.gmt.modisco.java.cdo.impl.JavaPackageImpl"/>
	    	<arg value="-reponame"/>
	    	<arg value="repo"/>
	        <classpath refid="io.github.abelgomez.kyanos.benchmarks.classpath"/>
	    </java>
		<stopwatch name="timer" action="total"/>
		<timestamp.echo message="End" />
    </target>
	
    <target name="query.invmethods.resource.kyanos.map">
		<timestamp.echo message="Start" />
		<echo>Querying ${kyanosresource.dir}</echo>
		<echo>JVM args: ${tester.vmargs.value}</echo>
		<stopwatch name="timer"/>
	    <java classname="io.github.abelgomez.kyanos.benchmarks.KyanosMapQueryInvisibleMethodDeclarations" failonerror="false" fork="yes" timeout="${timeout}">
        	<jvmarg line="${tester.vmargs.value}"/>
	        <arg value="-input"/>
	        <arg value="${kyanosresource.dir}"/>
	    	<arg value="-epackage_class"/>
	    	<arg value ="org.eclipse.gmt.modisco.java.kyanos.impl.JavaPackageImpl"/>
	        <classpath refid="io.github.abelgomez.kyanos.benchmarks.classpath"/>
	    </java>
		<stopwatch name="timer" action="total"/>
		<timestamp.echo message="End" />
    </target>
	
    <target name="query.invmethods.resource.kyanos.graph">
		<timestamp.echo message="Start" />
		<echo>Querying ${kyanosresource.dir}</echo>
		<echo>JVM args: ${tester.vmargs.value}</echo>
		<stopwatch name="timer"/>
	    <java classname="io.github.abelgomez.kyanos.benchmarks.KyanosGraphQueryInvisibleMethodDeclarations" failonerror="false" fork="yes" timeout="${timeout}">
        	<jvmarg line="${tester.vmargs.value}"/>
	        <arg value="-input"/>
	        <arg value="${kyanosresource.dir}"/>
	    	<arg value="-epackage_class"/>
	    	<arg value ="org.eclipse.gmt.modisco.java.kyanos.impl.JavaPackageImpl"/>
	        <classpath refid="io.github.abelgomez.kyanos.benchmarks.classpath"/>
	    </java>
		<stopwatch name="timer" action="total"/>
		<timestamp.echo message="End" />
    </target>
	
	<target name="query.invmethods.resources.cdo" description="Invisible methods (CDO)" depends="gen.test.resources.cdo">
		<antcall target="prepare.test.resources.cdo" />
		<foreach inheritall="true" target="query.invmethods.resource.cdo" param="cdoresource.dir">
			<path>
				<dirset dir="${tests.dir}">
					<include name="**/*.cdoresource"/>
				</dirset>
			</path>
		</foreach>
	</target>
	
	<target name="query.invmethods.resources.kyanos.map" description="Invisible methods (KyanosMap)" depends="gen.test.resources.kyanos.map">
		<antcall target="prepare.test.resources.kyanos.map" />
		<foreach inheritall="true" target="query.invmethods.resource.kyanos.map" param="kyanosresource.dir">
			<path>
				<dirset dir="${tests.dir}">
					<include name="**/*.kyanosmapresource"/>
				</dirset>
			</path>
		</foreach>
	</target>
	
	<target name="query.invmethods.resources.kyanos.graph" description="Invisible methods (KyanosGraph)" depends="gen.test.resources.kyanos.graph">
		<antcall target="prepare.test.resources.kyanos.graph" />
		<foreach inheritall="true" target="query.invmethods.resource.kyanos.graph" param="kyanosresource.dir">
			<path>
				<dirset dir="${tests.dir}">
					<include name="**/*.kyanosgraphresource"/>
				</dirset>
			</path>
		</foreach>
	</target>
	
	<target name="query.classdecl.resource.cdo">
		<timestamp.echo message="Start" />
		<echo>Querying ${cdoresource.dir}</echo>
		<echo>JVM args: ${tester.vmargs.value}</echo>
		<stopwatch name="timer"/>
	    <java classname="io.github.abelgomez.kyanos.benchmarks.CdoQueryClassDeclarationAttributes" failonerror="false" fork="yes" timeout="${timeout}">
        	<jvmarg line="${tester.vmargs.value}"/>
	        <arg value="-input"/>
	        <arg value="${cdoresource.dir}"/>
	    	<arg value="-epackage_class"/>
	    	<arg value ="org.eclipse.gmt.modisco.java.cdo.impl.JavaPackageImpl"/>
	    	<arg value="-reponame"/>
	    	<arg value="repo"/>
	        <classpath refid="io.github.abelgomez.kyanos.benchmarks.classpath"/>
	    </java>
		<stopwatch name="timer" action="total"/>
		<timestamp.echo message="End" />
    </target>
	
    <target name="query.classdecl.resource.kyanos.map">
		<timestamp.echo message="Start" />
		<echo>Querying ${kyanosresource.dir}</echo>
		<echo>JVM args: ${tester.vmargs.value}</echo>
		<stopwatch name="timer"/>
	    <java classname="io.github.abelgomez.kyanos.benchmarks.KyanosMapQueryClassDeclarationAttributes" failonerror="false" fork="yes" timeout="${timeout}">
        	<jvmarg line="${tester.vmargs.value}"/>
	        <arg value="-input"/>
	        <arg value="${kyanosresource.dir}"/>
	    	<arg value="-epackage_class"/>
	    	<arg value ="org.eclipse.gmt.modisco.java.kyanos.impl.JavaPackageImpl"/>
	        <classpath refid="io.github.abelgomez.kyanos.benchmarks.classpath"/>
	    </java>
		<stopwatch name="timer" action="total"/>
		<timestamp.echo message="End" />
    </target>
	
    <target name="query.classdecl.resource.kyanos.graph">
		<timestamp.echo message="Start" />
		<echo>Querying ${kyanosresource.dir}</echo>
		<echo>JVM args: ${tester.vmargs.value}</echo>
		<stopwatch name="timer"/>
	    <java classname="io.github.abelgomez.kyanos.benchmarks.KyanosGraphQueryClassDeclarationAttributes" failonerror="false" fork="yes" timeout="${timeout}">
        	<jvmarg line="${tester.vmargs.value}"/>
	        <arg value="-input"/>
	        <arg value="${kyanosresource.dir}"/>
	    	<arg value="-epackage_class"/>
	    	<arg value ="org.eclipse.gmt.modisco.java.kyanos.impl.JavaPackageImpl"/>
	        <classpath refid="io.github.abelgomez.kyanos.benchmarks.classpath"/>
	    </java>
		<stopwatch name="timer" action="total"/>
		<timestamp.echo message="End" />
    </target>
	
	<target name="query.classdecl.resources.cdo" description="Class declaration attributes (CDO)" depends="gen.test.resources.cdo">
		<antcall target="prepare.test.resources.cdo" />
		<foreach inheritall="true" target="query.classdecl.resource.cdo" param="cdoresource.dir">
			<path>
				<dirset dir="${tests.dir}">
					<include name="**/*.cdoresource"/>
				</dirset>
			</path>
		</foreach>
	</target>
	
	<target name="query.classdecl.resources.kyanos.map" description="Class declaration attributes (KyanosMap)" depends="gen.test.resources.kyanos.map">
		<antcall target="prepare.test.resources.kyanos.map" />
		<foreach inheritall="true" target="query.classdecl.resource.kyanos.map" param="kyanosresource.dir">
			<path>
				<dirset dir="${tests.dir}">
					<include name="**/*.kyanosmapresource"/>
				</dirset>
			</path>
		</foreach>
	</target>
	
	<target name="query.classdecl.resources.kyanos.graph" description="Class declaration attributes (KyanosGraph)" depends="gen.test.resources.kyanos.graph">
		<antcall target="prepare.test.resources.kyanos.graph" />
		<foreach inheritall="true" target="query.classdecl.resource.kyanos.graph" param="kyanosresource.dir">
			<path>
				<dirset dir="${tests.dir}">
					<include name="**/*.kyanosgraphresource"/>
				</dirset>
			</path>
		</foreach>
	</target>
	
    <target name="query.unusedmethods.complex.resource.cdo">
		<timestamp.echo message="Start" />
		<echo>Querying ${cdoresource.dir}</echo>
		<echo>JVM args: ${tester.vmargs.value}</echo>
		<stopwatch name="timer"/>
	    <java classname="io.github.abelgomez.kyanos.benchmarks.CdoQueryLoop" failonerror="false" fork="yes" timeout="${timeout}">
        	<jvmarg line="${tester.vmargs.value}"/>
	        <arg value="-input"/>
	        <arg value="${cdoresource.dir}"/>
	    	<arg value="-epackage_class"/>
	    	<arg value ="org.eclipse.gmt.modisco.java.cdo.impl.JavaPackageImpl"/>
	    	<arg value="-reponame"/>
	    	<arg value="repo"/>
	        <classpath refid="io.github.abelgomez.kyanos.benchmarks.classpath"/>
	    </java>
		<stopwatch name="timer" action="total"/>
		<timestamp.echo message="End" />
    </target>
	
    <target name="query.unusedmethods.complex.resource.kyanos.map">
		<timestamp.echo message="Start" />
		<echo>Querying ${kyanosresource.dir}</echo>
		<echo>JVM args: ${tester.vmargs.value}</echo>
		<stopwatch name="timer"/>
	    <java classname="io.github.abelgomez.kyanos.benchmarks.KyanosMapQueryLoop" failonerror="false" fork="yes" timeout="${timeout}">
        	<jvmarg line="${tester.vmargs.value}"/>
	        <arg value="-input"/>
	        <arg value="${kyanosresource.dir}"/>
	    	<arg value="-epackage_class"/>
	    	<arg value ="org.eclipse.gmt.modisco.java.kyanos.impl.JavaPackageImpl"/>
	        <classpath refid="io.github.abelgomez.kyanos.benchmarks.classpath"/>
	    </java>
		<stopwatch name="timer" action="total"/>
		<timestamp.echo message="End" />
    </target>
	
    <target name="query.unusedmethods.complex.resource.kyanos.graph">
		<timestamp.echo message="Start" />
		<echo>Querying ${kyanosresource.dir}</echo>
		<echo>JVM args: ${tester.vmargs.value}</echo>
		<stopwatch name="timer"/>
	    <java classname="io.github.abelgomez.kyanos.benchmarks.KyanosGraphQueryLoop" failonerror="false" fork="yes" timeout="${timeout}">
        	<jvmarg line="${tester.vmargs.value}"/>
	        <arg value="-input"/>
	        <arg value="${kyanosresource.dir}"/>
	    	<arg value="-epackage_class"/>
	    	<arg value ="org.eclipse.gmt.modisco.java.kyanos.impl.JavaPackageImpl"/>
	        <classpath refid="io.github.abelgomez.kyanos.benchmarks.classpath"/>
	    </java>
		<stopwatch name="timer" action="total"/>
		<timestamp.echo message="End" />
    </target>
	
	<target name="query.unusedmethods.complex.resources.cdo" description="Complex query (CDO)" depends="gen.test.resources.cdo">
		<antcall target="prepare.test.resources.cdo" />
		<foreach inheritall="true" target="query.unusedmethods.complex.resource.cdo" param="cdoresource.dir">
			<path>
				<dirset dir="${tests.dir}">
					<include name="**/*.cdoresource"/>
				</dirset>
			</path>
		</foreach>
	</target>
	
	<target name="query.unusedmethods.complex.resources.kyanos.map" description="Complex query (KyanosMap)" depends="gen.test.resources.kyanos.map">
		<antcall target="prepare.test.resources.kyanos.map" />
		<foreach inheritall="true" target="query.unusedmethods.complex.resource.kyanos.map" param="kyanosresource.dir">
			<path>
				<dirset dir="${tests.dir}">
					<include name="**/*.kyanosmapresource"/>
				</dirset>
			</path>
		</foreach>
	</target>
	
	<target name="query.unusedmethods.complex.resources.kyanos.graph" description="Complex query (KyanosGraph)" depends="gen.test.resources.kyanos.graph">
		<antcall target="prepare.test.resources.kyanos.graph" />
		<foreach inheritall="true" target="query.unusedmethods.complex.resource.kyanos.graph" param="kyanosresource.dir">
			<path>
				<dirset dir="${tests.dir}">
					<include name="**/*.kyanosgraphresource"/>
				</dirset>
			</path>
		</foreach>
	</target>
	
    <target name="query.rename.resource.cdo">
		<timestamp.echo message="Start" />
		<echo>Querying ${cdoresource.dir}</echo>
		<echo>JVM args: ${tester.vmargs.value}</echo>
		<stopwatch name="timer"/>
	    <java classname="io.github.abelgomez.kyanos.benchmarks.CdoQueryRenameAllMethods" failonerror="false" fork="yes" timeout="${timeout}">
        	<jvmarg line="${tester.vmargs.value}"/>
	        <arg value="-input"/>
	        <arg value="${cdoresource.dir}"/>
	    	<arg value="-epackage_class"/>
	    	<arg value ="org.eclipse.gmt.modisco.java.cdo.impl.JavaPackageImpl"/>
	    	<arg value="-reponame"/>
	    	<arg value="repo"/>
	        <classpath refid="io.github.abelgomez.kyanos.benchmarks.classpath"/>
	    </java>
		<stopwatch name="timer" action="total"/>
		<timestamp.echo message="End" />
    </target>
	
    <target name="query.rename.resource.kyanos.map">
		<timestamp.echo message="Start" />
		<echo>Querying ${kyanosresource.dir}</echo>
		<echo>JVM args: ${tester.vmargs.value}</echo>
		<stopwatch name="timer"/>
	    <java classname="io.github.abelgomez.kyanos.benchmarks.KyanosMapQueryRenameAllMethods" failonerror="false" fork="yes" timeout="${timeout}">
        	<jvmarg line="${tester.vmargs.value}"/>
	        <arg value="-input"/>
	        <arg value="${kyanosresource.dir}"/>
	    	<arg value="-epackage_class"/>
	    	<arg value ="org.eclipse.gmt.modisco.java.kyanos.impl.JavaPackageImpl"/>
	        <classpath refid="io.github.abelgomez.kyanos.benchmarks.classpath"/>
	    </java>
		<stopwatch name="timer" action="total"/>
		<timestamp.echo message="End" />
    </target>
	
    <target name="query.rename.resource.kyanos.graph">
		<timestamp.echo message="Start" />
		<echo>Querying ${kyanosresource.dir}</echo>
		<echo>JVM args: ${tester.vmargs.value}</echo>
		<stopwatch name="timer"/>
	    <java classname="io.github.abelgomez.kyanos.benchmarks.KyanosGraphQueryRenameAllMethods" failonerror="false" fork="yes" timeout="${timeout}">
        	<jvmarg line="${tester.vmargs.value}"/>
	        <arg value="-input"/>
	        <arg value="${kyanosresource.dir}"/>
	    	<arg value="-epackage_class"/>
	    	<arg value ="org.eclipse.gmt.modisco.java.kyanos.impl.JavaPackageImpl"/>
	        <classpath refid="io.github.abelgomez.kyanos.benchmarks.classpath"/>
	    </java>
		<stopwatch name="timer" action="total"/>
		<timestamp.echo message="End" />
    </target>
	
	<target name="query.rename.resources.cdo" description="Model modification and saving (CDO)" depends="gen.test.resources.cdo">
		<antcall target="prepare.test.resources.cdo" />
		<foreach inheritall="true" target="query.rename.resource.cdo" param="cdoresource.dir">
			<path>
				<dirset dir="${tests.dir}">
					<include name="**/*.cdoresource"/>
				</dirset>
			</path>
		</foreach>
	</target>
	
	<target name="query.rename.resources.kyanos.map" description="Model modification and saving (KyanosMap)" depends="gen.test.resources.kyanos.map">
		<antcall target="prepare.test.resources.kyanos.map" />
		<foreach inheritall="true" target="query.rename.resource.kyanos.map" param="kyanosresource.dir">
			<path>
				<dirset dir="${tests.dir}">
					<include name="**/*.kyanosmapresource"/>
				</dirset>
			</path>
		</foreach>
	</target>
	
	<target name="query.rename.resources.kyanos.graph" description="Model modification and saving (KyanosGraph)" depends="gen.test.resources.kyanos.graph">
		<antcall target="prepare.test.resources.kyanos.graph" />
		<foreach inheritall="true" target="query.rename.resource.kyanos.graph" param="kyanosresource.dir">
			<path>
				<dirset dir="${tests.dir}">
					<include name="**/*.kyanosgraphresource"/>
				</dirset>
			</path>
		</foreach>
	</target>
	
</project>

